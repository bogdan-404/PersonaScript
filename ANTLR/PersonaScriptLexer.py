# Generated from PersonaScript.g4 by ANTLR 4.12.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,19,153,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,1,0,1,
        0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,
        5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,
        7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,
        10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,
        12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,
        13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,
        15,1,15,1,15,1,15,1,15,1,16,1,16,5,16,135,8,16,10,16,12,16,138,9,
        16,1,16,1,16,1,17,4,17,143,8,17,11,17,12,17,144,1,18,4,18,148,8,
        18,11,18,12,18,149,1,18,1,18,0,0,19,1,1,3,2,5,3,7,4,9,5,11,6,13,
        7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,
        37,19,1,0,3,1,0,34,34,1,0,48,57,3,0,9,10,13,13,32,32,155,0,1,1,0,
        0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,
        0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,
        0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,
        0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,1,39,1,0,0,0,3,41,1,0,0,0,
        5,43,1,0,0,0,7,45,1,0,0,0,9,47,1,0,0,0,11,49,1,0,0,0,13,61,1,0,0,
        0,15,69,1,0,0,0,17,78,1,0,0,0,19,83,1,0,0,0,21,88,1,0,0,0,23,93,
        1,0,0,0,25,98,1,0,0,0,27,109,1,0,0,0,29,118,1,0,0,0,31,125,1,0,0,
        0,33,132,1,0,0,0,35,142,1,0,0,0,37,147,1,0,0,0,39,40,5,123,0,0,40,
        2,1,0,0,0,41,42,5,125,0,0,42,4,1,0,0,0,43,44,5,61,0,0,44,6,1,0,0,
        0,45,46,5,44,0,0,46,8,1,0,0,0,47,48,5,34,0,0,48,10,1,0,0,0,49,50,
        5,68,0,0,50,51,5,101,0,0,51,52,5,115,0,0,52,53,5,99,0,0,53,54,5,
        114,0,0,54,55,5,105,0,0,55,56,5,112,0,0,56,57,5,116,0,0,57,58,5,
        105,0,0,58,59,5,111,0,0,59,60,5,110,0,0,60,12,1,0,0,0,61,62,5,83,
        0,0,62,63,5,101,0,0,63,64,5,116,0,0,64,65,5,116,0,0,65,66,5,105,
        0,0,66,67,5,110,0,0,67,68,5,103,0,0,68,14,1,0,0,0,69,70,5,82,0,0,
        70,71,5,101,0,0,71,72,5,115,0,0,72,73,5,112,0,0,73,74,5,111,0,0,
        74,75,5,110,0,0,75,76,5,115,0,0,76,77,5,101,0,0,77,16,1,0,0,0,78,
        79,5,110,0,0,79,80,5,97,0,0,80,81,5,109,0,0,81,82,5,101,0,0,82,18,
        1,0,0,0,83,84,5,116,0,0,84,85,5,121,0,0,85,86,5,112,0,0,86,87,5,
        101,0,0,87,20,1,0,0,0,88,89,5,109,0,0,89,90,5,98,0,0,90,91,5,116,
        0,0,91,92,5,105,0,0,92,22,1,0,0,0,93,94,5,114,0,0,94,95,5,111,0,
        0,95,96,5,108,0,0,96,97,5,101,0,0,97,24,1,0,0,0,98,99,5,98,0,0,99,
        100,5,97,0,0,100,101,5,99,0,0,101,102,5,107,0,0,102,103,5,103,0,
        0,103,104,5,114,0,0,104,105,5,111,0,0,105,106,5,117,0,0,106,107,
        5,110,0,0,107,108,5,100,0,0,108,26,1,0,0,0,109,110,5,99,0,0,110,
        111,5,97,0,0,111,112,5,116,0,0,112,113,5,101,0,0,113,114,5,103,0,
        0,114,115,5,111,0,0,115,116,5,114,0,0,116,117,5,121,0,0,117,28,1,
        0,0,0,118,119,5,108,0,0,119,120,5,101,0,0,120,121,5,110,0,0,121,
        122,5,103,0,0,122,123,5,116,0,0,123,124,5,104,0,0,124,30,1,0,0,0,
        125,126,5,112,0,0,126,127,5,114,0,0,127,128,5,111,0,0,128,129,5,
        109,0,0,129,130,5,112,0,0,130,131,5,116,0,0,131,32,1,0,0,0,132,136,
        3,9,4,0,133,135,8,0,0,0,134,133,1,0,0,0,135,138,1,0,0,0,136,134,
        1,0,0,0,136,137,1,0,0,0,137,139,1,0,0,0,138,136,1,0,0,0,139,140,
        3,9,4,0,140,34,1,0,0,0,141,143,7,1,0,0,142,141,1,0,0,0,143,144,1,
        0,0,0,144,142,1,0,0,0,144,145,1,0,0,0,145,36,1,0,0,0,146,148,7,2,
        0,0,147,146,1,0,0,0,148,149,1,0,0,0,149,147,1,0,0,0,149,150,1,0,
        0,0,150,151,1,0,0,0,151,152,6,18,0,0,152,38,1,0,0,0,4,0,136,144,
        149,1,6,0,0
    ]

class PersonaScriptLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    OPEN_BRACE = 1
    CLOSE_BRACE = 2
    EQUALS = 3
    COMMA = 4
    QUOTE = 5
    DESCRIPTION = 6
    SETTING = 7
    RESPONSE = 8
    NAME = 9
    TYPE = 10
    MBTI = 11
    ROLE = 12
    BACKGROUND = 13
    CATEGORY = 14
    LENGTH = 15
    PROMPT = 16
    STRING_LITERAL = 17
    NUMBER_LITERAL = 18
    WS = 19

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'{'", "'}'", "'='", "','", "'\"'", "'Description'", "'Setting'", 
            "'Response'", "'name'", "'type'", "'mbti'", "'role'", "'background'", 
            "'category'", "'length'", "'prompt'" ]

    symbolicNames = [ "<INVALID>",
            "OPEN_BRACE", "CLOSE_BRACE", "EQUALS", "COMMA", "QUOTE", "DESCRIPTION", 
            "SETTING", "RESPONSE", "NAME", "TYPE", "MBTI", "ROLE", "BACKGROUND", 
            "CATEGORY", "LENGTH", "PROMPT", "STRING_LITERAL", "NUMBER_LITERAL", 
            "WS" ]

    ruleNames = [ "OPEN_BRACE", "CLOSE_BRACE", "EQUALS", "COMMA", "QUOTE", 
                  "DESCRIPTION", "SETTING", "RESPONSE", "NAME", "TYPE", 
                  "MBTI", "ROLE", "BACKGROUND", "CATEGORY", "LENGTH", "PROMPT", 
                  "STRING_LITERAL", "NUMBER_LITERAL", "WS" ]

    grammarFileName = "PersonaScript.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.12.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


